pour-compiler
 Created on: 13 juin 2014
     Author: mael65

On distinguera deux compilations différentes : celle de l'utilisateur et celle du développeur.
L'utilisateur n'exécute que le ./configure puis make, le développeur modifie la configuration de compilation.
-------- Comment compiler le projet ----------------------
Pour la compilation simple par l'utilisateur :
	./configure
	make
Pour la mise à jour des fichiers de configuration de la compilation :
	aclocal
	automake
	autoconf
ATTENTION pour rendre le projet "portable" et ne plus nécessiter la suite Autotools, il faut faire
	make dist
ce qui creera un zip contenant le projet avec seulement les fichiers vitaux.
-------- Fichiers requis par la suite Autotools ----------
Pour compiler un executable par un utilisateur :
- les Makefile.in dans tous les sous-dossiers
- le ./configure
- config/compile, 
- config/missing, (généré par automake)
- config/install-sh (généré par automake)

Pour la configuration de la compilation par les développeurs du projet : 
- Makefile.am dans tous les sous-dossiers (écrits à la main)
- configure.ac (écrit à la main)
- autotroll.mk (pour gérer Qt)
- m4/autotroll.m4, (pour gérer Qt)
- m4/check_framework.m4 (pour vérifier que le framework sbigudrv est présent)
- config.h.in éventuellement (généré par Autoheader)
-------- Fichiers générés automatiquement ----------------
Certains fichiers sont générés lors de la compilation ou de la configuration du projet sont inutiles dans certains cas ; ces fichiers sont temporaires.

Lors de la tâche de compilation de l'executable :
- config.h
- Makefile
- config.log
- config.status (permet de debugger)
- stamp-h1

Lors de la tâche de configuration de la compilation :
- configure
- aclocal.m4 (généré par aclocal)
- 

--------
